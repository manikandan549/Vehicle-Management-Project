# Generated by Django 5.1 on 2024-08-18 07:09

import datetime
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerVehicle',
            fields=[
                ('customer_vehicle_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_vehicle', models.CharField(max_length=255, unique=True)),
                ('vehicle_number', models.CharField(max_length=25)),
                ('service_Due_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vehicle_id', models.IntegerField(primary_key=True, serialize=False)),
                ('brand', models.CharField(max_length=100)),
                ('vehicle', models.CharField(max_length=100, unique=True)),
                ('model_year', models.PositiveIntegerField()),
                ('color', models.CharField(max_length=50)),
                ('specifications', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('User_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('Showroom_Owner', 'Showroom Owner'), ('Service_Agent', 'Service Agent'), ('Customer', 'Customer')], max_length=40)),
                ('email', models.EmailField(max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('service_request_id', models.AutoField(primary_key=True, serialize=False)),
                ('service_type', models.CharField(choices=[('Full_Service', 'Full Service'), ('Regular_Service', 'Regular Service'), ('Customize_Service', 'Customize Service')], default='Regular_Service', max_length=40)),
                ('service_scheduled_date', models.DateField(null=True)),
                ('status_of_request', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=40, null=True)),
                ('request_at', models.DateField(default=datetime.date.today)),
                ('customer_vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to='Showroom.customervehicle', to_field='customer_vehicle')),
                ('customer', models.ForeignKey(blank=True, limit_choices_to={'role': 'Customer'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_requestt', to=settings.AUTH_USER_MODEL, to_field='username')),
                ('scheduled_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'Service_Agent'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_request', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('service_date', models.DateField(blank=True, null=True)),
                ('service_type', models.CharField(max_length=350, null=True)),
                ('description', models.TextField(blank=True, max_length=400, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In_Progress', 'In Progress'), ('Completed', 'Completed')], default='Pending', max_length=40)),
                ('next_service_date', models.DateField(blank=True, null=True)),
                ('service_request_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='Showroom.servicerequest')),
                ('performed_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'Service_Agent'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='servicesss', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.AddField(
            model_name='customervehicle',
            name='customer',
            field=models.ForeignKey(limit_choices_to={'role': 'Customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='CustomerVehicle', to=settings.AUTH_USER_MODEL, to_field='username'),
        ),
        migrations.CreateModel(
            name='AssignVehicle',
            fields=[
                ('Assign_id', models.AutoField(primary_key=True, serialize=False)),
                ('vehicles_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AssignVehicle', to='Showroom.vehicle', to_field='vehicle')),
                ('customer', models.ForeignKey(limit_choices_to={'role': 'Customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='AssignVehicle', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
    ]
